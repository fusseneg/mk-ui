doctype html
html
	head
		include ./shared/head
		link(rel="stylesheet", type="text/css", href="/dist/css/datepicker.css")
		link(rel="stylesheet", type="text/css", href="/docs/assets/css/datepicker.css")
	body
		include ./shared/header
		main.container
			include ./shared/info
			h2 Examples
			div.row
				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| Standard Datepicker
						div.panel-body
							p
								| Barebones datepicker example with no default value set.
							form
								fieldset.mk-dp-root
									input(type="date", class="mk-dp", aria-label="Start Date")
				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| Add Min/Max
						div.panel-body
							p
								| This example adds a min (01/01/2017) and max (03/12/2017) date restrictions by settings attributes directly on the date input.
							form
								fieldset.mk-dp-root
									input(type="date", class="mk-dp", aria-label="Start Date", value="2017-01-27", min="2017-01-01", max="2017-03-12")

				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| No Monthly Rollovers
						div.panel-body
							p
								| This example Removes the days in last month and next month from showing up in the current UI calendar.
							form
								fieldset.mk-dp-root(data-rollover="false")
									input(type="date", class="mk-dp", aria-label="Start Date", value="2017-02-27")

				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| Change Month/Day Labeling
						div.panel-body
							p
								| Maybe you want your calendar in Japanese. No problem.
								| You can change the day/months values by giving Datepicker a formatmap.
								| You can also change formatting structure. See the config setup below.
							form
								fieldset#japanese.mk-dp-root(data-rollover="false")
									input(type="date", class="mk-dp", aria-label="Kaishi-bi", value="2017-02-27")

				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| Blackout, Holiday, and Special Dates
						div.panel-body
							p
								| With Datepicker 2.0 you have the ability to set Blackout dates, holidays, and special "custom" dates.
								| When a date is selected/entered, use the datepicker instances API (isBlackout(), isUnavailable(), isHoliday(), or isSpecial()) to check date selected.
								| See below for more details.
							form
								fieldset#blackouts.mk-dp-root(data-rollover="false")
									input(type="date", class="mk-dp", aria-label="Start Date", value="2017-02-27")

				div.col-sm-6
					section.panel
						header.panel-heading
							h3.panel-title
								| Inline Calendar
						div.panel-body
							p
								| We can roll AirBnb Style with inline calendars.
								| It's even easy to update other html elements with the selected dates like in this below example.
							form

								fieldset#airbnb.mk-dp-root(data-rollover="false", data-popup="false", data-inputs="false")
									div#updater
										| dddd, mmmm dd yyyy
									input(type="date", class="mk-dp", aria-label="Start Date")
			h2 Setup
			pre
				code.language-html
					| &lt;div class="mk-dp-root"&gt;
					|	&lt;input class="mk-dp" type="date" name="start-date" aria-label="Start Date" value="2017-02-27" /&gt;
					| &lt;/div&gt;

			h3 Configuration Options via Data-Attributes
			p
				| There are two ways to configure Datepicker, the first of which is by providing data attributes on the root input.
				| Below is a list of all possible data attributes you may add to configure an instance. All data attributes are optional.
			pre
				code.language-html
					| &lt;div
					|	class="mk-dp-root"
					|	&lt;!-- presentational format for dates --&gt;
					|	data-format="mm/dd/yyyy"
					|	&lt;!-- calendar renders as popup. Default is true. --&gt;
					|	data-popup="true"
					|	&lt;!-- Hide the date input UI (not calendar). Default is false. --&gt;
					|	data-inputs="true"&gt;
					|	&lt;!-- Enable/disable rollover dates. Default is true. --&gt;
					|	data-rollover="false"&gt;
					|	&lt;input type="text" class="mk-dp"
					|		name="startdate"
					|		aria-label="Start Date"
					|		&lt;!-- min date in native date format --&gt;
					|		min="2017-01-01"
					|		&lt;!-- max date in native format --&gt;
					|		max="2018-01-01"
					|		&lt;!-- default value in native format --&gt;
					|		value="2017-01-12" /&gt;
					| &lt;/div&gt;

			h2 Instantiation
			p
				| Below is an example of instantiating an Datepicker.
				| Like all other Mk components, the first argument is the root and the second is configuration options.
				| In the example below, we've provided all possible config options, however, all config properties are completely optional.
			pre
				code.language-javascript
					| //get Datepicker object
					| var Datepicker = Mk.get('Datepicker');
					| //
					| //create instance
					| var datepicker = new Datepicker('#selector', {
					|	rollover: true/false,
					|	popup: true/false,
					|	format: 'mm/dd/yyyy',
					|	label: 'Some Label for Aria'
					|	blackouts: [
					|		// blackout all sunday and saturdays
					|		'sunday',
					|		'saturday',
					|		// blackout a single date
					|		'2017-01-07',
					|		// set a range
					|		'2017-01-10/2017-01-17'
					|	],
					|	holidays: [
					|		'2017-12-25'
					|	],
					|	special: {
					|		birthdays: [
					|			'2017-01-01',
					|			'2017-04-30'
					|		]
					|	},
					|	templates: {
					|		..template overrides..
					|	},
					|	//format overrides/additions
					|	formats: {
					|		..format overrides..
					| 	},
					|	//events you want bound
					|	events: {
					|		..you can bind events here or by using on() one() and off()..
					|	}
					| });

			include ./shared/events
			include ./shared/api
		include ./shared/scripts
		script(type="text/javascript", src="/src/js/datepicker.js")
		script.

			Mk.transitions.enable();

			var Datepicker = Mk.get('Datepicker'),
				examples = Mk.$('.mk-dp-root'),
				datepicker;

			examples.each(function (example) {

				if (example.id === 'japanese') {
					datepicker = new Datepicker(example, {
						label: '',
						format: 'mm/dd/yyyy',
						formats: {
							days: "dd"
						},
						formatmap: {
							months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
							days: ['Nichiyōbi', 'Getsuyō', 'Kayōbi', 'Suiyōbi', 'Mokuyōbi', 'Kin\'yōbi', 'Doyōbi']
						}
					});
				}
				else if (example.id === 'blackouts') {
					datepicker = new Datepicker(example, {
						label: '',
						format: 'mm/dd/yyyy',
						blackouts: [
							'sunday',
							'saturday',
							'2017-02-06/2017-02-10',
							'2017-03-13/2017-03-17',
							'2017-04-30'
						]
					});
				}
				else {

					datepicker = new Datepicker(example, {
						label: 'Choose a Start Date',
						format: 'mm/dd/yyyy'
					});
				}

				datepicker.on('change', function () {

					if (this.root.attr('id') === 'airbnb') {
						this.root.find('#updater').text(this.dts(this.date, 'dddd, mmmm dd yyyy'));
					}

					console.info('you selected: ', this.value);
				});

			});
